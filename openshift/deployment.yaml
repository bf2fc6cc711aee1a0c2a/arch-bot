apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"bf2-arch-bot:1.0.0-SNAPSHOT"},"fieldPath":"spec.template.spec.containers[?(@.name==\"bf2-arch-bot\")].image"}]'
  labels:
    app.kubernetes.io/name: bf2-arch-bot
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  name: bf2-arch-bot
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: bf2-arch-bot
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bf2-arch-bot
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
    spec:
      containers:
      - command:
        - java
        - -Dquarkus.http.host=0.0.0.0
        - -Djava.util.logging.manager=org.jboss.logmanager.LogManager
        - -jar
        - /deployments/quarkus-run.jar
        env:
        - name: JAVA_APP_JAR
          value: /deployments/quarkus-run.jar
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        envFrom:
        - secretRef:
            name: bf2-arch-bot
        image: image-registry.openshift-image-registry.svc:5000/clean-test/bf2-arch-bot@1.0.0-SNAPSHOT
        imagePullPolicy: Always
        name: bf2-arch-bot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
